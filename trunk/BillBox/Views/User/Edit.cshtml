@model BillBox.Models.User

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Default.cshtml";
    
    var Parishes = ViewBag.Parishes as IEnumerable<BillBox.Models.Parish>;
    var UserLevels = ViewBag.UserLevels as IEnumerable<BillBox.Models.UserLevel>;
    var Agents = ViewBag.Agents as IEnumerable<BillBox.Models.Agent>;
    var Branches = ViewBag.AgentBranches as IEnumerable<BillBox.Models.AgentBranch>;
}
<div class="action">
    <div class="section">
        <div class="section-header">
        </div>
        <div class="section-content">
            <div class="form-container">
                @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { @class = "wf" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)                    

                    <fieldset class="top">
                        <legend>Edit User</legend>

                        @Html.HiddenFor(model => model.UserId)
                        @Html.HiddenFor(model => model.PasswordExpireAt)

                        <div class="row top clearfix">
                            @Html.LabelFor(model => model.Name)
                            @Html.TextBoxFor(model => model.Name)
                            @Html.ValidationMessageFor(model => model.Name)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.Username)
                            @Html.TextBoxFor(model => model.Username)
                            @Html.ValidationMessageFor(model => model.Username)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.Password)
                            @Html.PasswordFor(model => model.Password)
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.AddressStreet)
                            @Html.TextBoxFor(model => model.AddressStreet)
                            @Html.ValidationMessageFor(model => model.AddressStreet)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.AddressCity)
                            @Html.TextBoxFor(model => model.AddressCity)
                            @Html.ValidationMessageFor(model => model.AddressCity)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.ParishId)
                            @Html.DropDownListFor(model => model.ParishId, new SelectList(Parishes, "ParishId", "Name"), "Select Parish")
                            @Html.ValidationMessageFor(model => model.ParishId)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.ContactNumber)
                            @Html.TextBoxFor(model => model.ContactNumber)
                            @Html.ValidationMessageFor(model => model.ContactNumber)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.EmailAddress)
                            @Html.TextBoxFor(model => model.EmailAddress)
                            @Html.ValidationMessageFor(model => model.EmailAddress)
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.AgentId)
                            @Html.DropDownListFor(model => model.AgentId, new SelectList(Agents, "AgentId", "Name"), "Select Agent")
                            @Html.ValidationMessageFor(model => model.AgentId)
                        </div>

                        <div id="agent-branches-area" class="row clearfix">
                            @if (Model.AgentBranchId != null)
                            {
                                <div>
                                    @Html.LabelFor(model => model.AgentBranchId)
                                    @Html.DropDownListFor(model => model.AgentBranchId, new SelectList(Branches, "BranchId", "Name"), "Select Branch")
                                    @Html.ValidationMessageFor(model => model.AgentBranchId)
                                </div>
                            }
                        </div>

                        <div class="row clearfix">
                            @Html.LabelFor(model => model.UserLevelId)
                            @Html.DropDownListFor(model => model.UserLevelId, new SelectList(UserLevels, "LevelId", "LevelName"), "Select User Level")
                            @Html.ValidationMessageFor(model => model.UserLevelId)
                        </div>
                    </fieldset>
                    
                    <div class="buttons bottom">
                        <input type="submit" value="Save" />
                    </div>
                }
            </div>
        </div>
        <div class="section-footer">
        </div>
    </div>
</div>


@section SidebarLeft {
    @Html.Partial("_SidebarMenu")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

            $('#@Html.IdFor(m => m.AgentId)').change(function () {
                loadAgentBranches($(this).val());
            });
        });

        function loadAgentBranches(agentId) {
            if (agentId) {
                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: '@Url.Action("AgentBranches", "User")',
                    data: { 'id': agentId },
                    success: function (html) {
                        $("#agent-branches-area").html(html);
                    },
                    error: function () {
                        alert("Error loading agent branches");
                        $("#agent-branches-area").html("");
                    }
                });
            } else {
                $("#agent-branches-area").html("");
            }
        }
    </script>
}
