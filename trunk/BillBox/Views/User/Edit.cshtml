@model BillBox.Models.User

@{
    ViewBag.Title = "Edit User";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var Parishes = ViewBag.Parishes as IEnumerable<BillBox.Models.Parish>;
    var UserLevels = ViewBag.UserLevels as IEnumerable<BillBox.Models.UserLevel>;
    var Agents = ViewBag.Agents as IEnumerable<BillBox.Models.Agent>;
    var Branches = ViewBag.AgentBranches as IEnumerable<BillBox.Models.AgentBranch>;
}

<div class="row main">
    <div class="col-lg-12">
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Home", "Index", "Default")</li>
            <li>@Html.ActionLink("Users", "Index", "User")</li>
            <li class="active">Edit User</li>
        </ol>
        <!--<h1 class="page-header">Create Agent</h1>-->
        <div class="panel panel-default">
            <div class="panel-heading">
                User Information
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-lg-6">
                        @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            @Html.HiddenFor(model => model.UserId)
                            @Html.HiddenFor(model => model.PasswordExpireAt)

                            <div class="form-group">
                                @Html.LabelFor(m => m.Name)
                                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Name)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.Username)
                                @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Username)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Password)
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.AddressStreet)
                                @Html.TextBoxFor(m => m.AddressStreet, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AddressStreet)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.AddressCity)
                                @Html.TextBoxFor(m => m.AddressCity, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.AddressCity)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ParishId, "Parish")
                                @Html.DropDownListFor(m => m.ParishId, new SelectList(Parishes, "ParishId", "Name"), "Select Parish", new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ParishId)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.ContactNumber)
                                @Html.TextBoxFor(m => m.ContactNumber, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ContactNumber)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.EmailAddress)
                                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.EmailAddress)
                            </div>
                        
                            <div class="form-group">
                                @Html.LabelFor(model => model.AgentId)
                                @Html.DropDownListFor(model => model.AgentId, new SelectList(Agents, "AgentId", "Name"), "Select Agent", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AgentId)
                            </div>

                            <div id="agent-branches-area" class="form-group">
                                @if (Model.AgentBranchId != null)
                                {
                                    <div>
                                        @Html.LabelFor(model => model.AgentBranchId)
                                        @Html.DropDownListFor(model => model.AgentBranchId, new SelectList(Branches, "BranchId", "Name"), "Select Branch", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AgentBranchId)
                                    </div>
                                }
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserLevelId)
                                @Html.DropDownListFor(model => model.UserLevelId, new SelectList(UserLevels, "LevelId", "LevelName"), "Select User Level", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.UserLevelId)
                            </div>
                            <button type="submit" class="btn btn-default">Save</button>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {

            $('#@Html.IdFor(m => m.AgentId)').change(function () {
                loadAgentBranches($(this).val());
            });
        });

        function loadAgentBranches(agentId) {
            if (agentId) {
                $.ajax({
                    cache: false,
                    type: 'GET',
                    url: '@Url.Action("AgentBranches", "User")',
                    data: { 'id': agentId },
                    success: function (html) {
                        $("#agent-branches-area").html(html);
                    },
                    error: function () {
                        alert("Error loading agent branches");
                        $("#agent-branches-area").html("");
                    }
                });
            } else {
                $("#agent-branches-area").html("");
            }
        }
    </script>
}
